{"ast":null,"code":"import { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/authorization.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ng-zorro-antd/grid\";\nimport * as i5 from \"ng-zorro-antd/form\";\nimport * as i6 from \"ng-zorro-antd/input\";\nimport * as i7 from \"ng-zorro-antd/button\";\nimport * as i8 from \"ng-zorro-antd/core/transition-patch\";\nimport * as i9 from \"ng-zorro-antd/core/wave\";\nexport class AuthorizationPageComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  submitForm() {\n    if (this.validateForm.valid) {\n      this.authService.logIn({\n        login: this.validateForm.value.userName,\n        password: this.validateForm.value.password\n      }).subscribe(() => {\n        if (this.authService.userResponseAuthModel != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n    } else {\n      Object.values(this.validateForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsDirty();\n          control.updateValueAndValidity({\n            onlySelf: true\n          });\n        }\n      });\n    }\n  }\n  ngOnInit() {\n    this.validateForm = new UntypedFormGroup({\n      userName: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n}\nAuthorizationPageComponent.ɵfac = function AuthorizationPageComponent_Factory(t) {\n  return new (t || AuthorizationPageComponent)(i0.ɵɵdirectiveInject(i1.AuthorizationService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAuthorizationPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthorizationPageComponent,\n  selectors: [[\"app-authorization-page\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"align-center\"], [\"nz-form\", \"\", 1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [\"nzErrorTip\", \"Please input your username!\"], [\"nzPrefixIcon\", \"user\"], [\"type\", \"text\", \"nz-input\", \"\", \"formControlName\", \"userName\", \"placeholder\", \"Username\"], [\"nzErrorTip\", \"Please input your Password!\"], [\"nzPrefixIcon\", \"lock\"], [\"type\", \"password\", \"nz-input\", \"\", \"formControlName\", \"password\", \"placeholder\", \"Password\"], [\"nz-button\", \"\", 1, \"login-form-button\", \"login-form-margin\", 3, \"nzType\"], [\"routerLink\", \"/register\"]],\n  template: function AuthorizationPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthorizationPageComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(2, \"nz-form-item\")(3, \"nz-form-control\", 2)(4, \"nz-input-group\", 3);\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"nz-form-item\")(7, \"nz-form-control\", 5)(8, \"nz-input-group\", 6);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"button\", 8);\n      i0.ɵɵtext(11, \"Log in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" Or \");\n      i0.ɵɵelementStart(13, \"a\", 9);\n      i0.ɵɵtext(14, \"register now!\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.validateForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"nzType\", \"primary\");\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i4.NzColDirective, i4.NzRowDirective, i5.NzFormDirective, i5.NzFormItemComponent, i5.NzFormControlComponent, i6.NzInputDirective, i6.NzInputGroupComponent, i3.FormGroupDirective, i3.FormControlName, i7.NzButtonComponent, i8.ɵNzTransitionPatchDirective, i9.NzWaveDirective],\n  styles: [\".login-form[_ngcontent-%COMP%] {\\n    max-width: 300px;\\n    width: 100%;\\n}\\n\\n.login-form-margin[_ngcontent-%COMP%] {\\n    margin-bottom: 16px;\\n}\\n\\n.login-form-forgot[_ngcontent-%COMP%] {\\n    float: right;\\n}\\n\\n.login-form-button[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n.align-center[_ngcontent-%COMP%]{\\n    height: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXV0aG9yaXphdGlvbi1wYWdlL2F1dGhvcml6YXRpb24tcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XHJcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5sb2dpbi1mb3JtLW1hcmdpbiB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG59XHJcblxyXG4ubG9naW4tZm9ybS1mb3Jnb3Qge1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4ubG9naW4tZm9ybS1idXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5hbGlnbi1jZW50ZXJ7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","UntypedFormGroup","Validators","AuthorizationPageComponent","constructor","authService","router","submitForm","validateForm","valid","logIn","login","value","userName","password","subscribe","userResponseAuthModel","navigate","Object","values","controls","forEach","control","invalid","markAsDirty","updateValueAndValidity","onlySelf","ngOnInit","required","i0","ɵɵdirectiveInject","i1","AuthorizationService","i2","Router","selectors","decls","vars","consts","template","AuthorizationPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AuthorizationPageComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty"],"sources":["/Users/kauriya/Documents/Projects/ASP.NET/WebAppShopStudy/web-shop-client/src/app/pages/authorization-page/authorization-page.component.ts","/Users/kauriya/Documents/Projects/ASP.NET/WebAppShopStudy/web-shop-client/src/app/pages/authorization-page/authorization-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthorizationService } from 'src/app/services/authorization.service';\nimport { catchError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n@Component({\n  selector: 'app-authorization-page',\n  templateUrl: './authorization-page.component.html',\n  styleUrls: ['./authorization-page.component.css']\n})\nexport class AuthorizationPageComponent implements OnInit {\n\n  constructor(\n    private authService: AuthorizationService, \n    private router: Router\n  ) {}\n  \n  validateForm!: UntypedFormGroup;\n\n  submitForm(): void {\n    if (this.validateForm.valid) {\n      this.authService.logIn({\n          login: this.validateForm.value.userName as string,\n          password: this.validateForm.value.password as string \n      })\n      .subscribe(() => {\n          if(this.authService.userResponseAuthModel != null){\n            this.router.navigate(['/home']);\n          }\n        }\n      );\n    } \n    else {\n      Object.values(this.validateForm.controls).forEach(control => {\n          if (control.invalid) {\n            control.markAsDirty();\n            control.updateValueAndValidity({ onlySelf: true });\n          }\n        }\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    this.validateForm = new UntypedFormGroup({\n      userName: new FormControl<string>('', [\n        Validators.required,\n      ]),\n      password: new FormControl<string>('', [\n        Validators.required,\n      ])\n    }) \n  }\n\n}","<div class=\"align-center\">\n    <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\n        <nz-form-item>\n            <nz-form-control nzErrorTip=\"Please input your username!\">\n                <nz-input-group nzPrefixIcon=\"user\">\n                    <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\" />\n                </nz-input-group>\n            </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n            <nz-form-control nzErrorTip=\"Please input your Password!\">\n                <nz-input-group nzPrefixIcon=\"lock\">\n                    <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" />\n                </nz-input-group>\n            </nz-form-control>\n        </nz-form-item>\n        <button nz-button class=\"login-form-button login-form-margin\" [nzType]=\"'primary'\">Log in</button>\n        Or\n        <a routerLink=\"/register\">register now!</a>\n    </form>\n</div>"],"mappings":"AACA,SAASA,WAAW,EAAsBC,gBAAgB,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;;AAU9F,OAAM,MAAOC,0BAA0B;EAErCC,YACUC,WAAiC,EACjCC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAIHC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACC,YAAY,CAACC,KAAK,EAAE;MAC3B,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;QACnBC,KAAK,EAAE,IAAI,CAACH,YAAY,CAACI,KAAK,CAACC,QAAkB;QACjDC,QAAQ,EAAE,IAAI,CAACN,YAAY,CAACI,KAAK,CAACE;OACrC,CAAC,CACDC,SAAS,CAAC,MAAK;QACZ,IAAG,IAAI,CAACV,WAAW,CAACW,qBAAqB,IAAI,IAAI,EAAC;UAChD,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;MAEnC,CAAC,CACF;KACF,MACI;MACHC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACX,YAAY,CAACY,QAAQ,CAAC,CAACC,OAAO,CAACC,OAAO,IAAG;QACxD,IAAIA,OAAO,CAACC,OAAO,EAAE;UACnBD,OAAO,CAACE,WAAW,EAAE;UACrBF,OAAO,CAACG,sBAAsB,CAAC;YAAEC,QAAQ,EAAE;UAAI,CAAE,CAAC;;MAEtD,CAAC,CACF;;EAEL;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACnB,YAAY,GAAG,IAAIP,gBAAgB,CAAC;MACvCY,QAAQ,EAAE,IAAIb,WAAW,CAAS,EAAE,EAAE,CACpCE,UAAU,CAAC0B,QAAQ,CACpB,CAAC;MACFd,QAAQ,EAAE,IAAId,WAAW,CAAS,EAAE,EAAE,CACpCE,UAAU,CAAC0B,QAAQ,CACpB;KACF,CAAC;EACJ;;AA1CWzB,0BAA0B,C;mBAA1BA,0BAA0B,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,oBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAA1B/B,0BAA0B,C;QAA1BA,0BAA0B;EAAAgC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXvCZ,EAAA,CAAAc,cAAA,aAA0B;MACsCd,EAAA,CAAAe,UAAA,sBAAAC,6DAAA;QAAA,OAAYH,GAAA,CAAAnC,UAAA,EAAY;MAAA,EAAC;MACjFsB,EAAA,CAAAc,cAAA,mBAAc;MAGFd,EAAA,CAAAiB,SAAA,eAAgF;MACpFjB,EAAA,CAAAkB,YAAA,EAAiB;MAGzBlB,EAAA,CAAAc,cAAA,mBAAc;MAGFd,EAAA,CAAAiB,SAAA,eAAoF;MACxFjB,EAAA,CAAAkB,YAAA,EAAiB;MAGzBlB,EAAA,CAAAc,cAAA,iBAAmF;MAAAd,EAAA,CAAAmB,MAAA,cAAM;MAAAnB,EAAA,CAAAkB,YAAA,EAAS;MAClGlB,EAAA,CAAAmB,MAAA,YACA;MAAAnB,EAAA,CAAAc,cAAA,YAA0B;MAAAd,EAAA,CAAAmB,MAAA,qBAAa;MAAAnB,EAAA,CAAAkB,YAAA,EAAI;;;MAjBjClB,EAAA,CAAAoB,SAAA,GAA0B;MAA1BpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAAlC,YAAA,CAA0B;MAe0BqB,EAAA,CAAAoB,SAAA,GAAoB;MAApBpB,EAAA,CAAAqB,UAAA,qBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}