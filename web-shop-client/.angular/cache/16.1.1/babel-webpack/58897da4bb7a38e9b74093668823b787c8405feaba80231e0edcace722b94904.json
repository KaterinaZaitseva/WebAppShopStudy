{"ast":null,"code":"import * as i3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, Self, Directive, Input, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject, from } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IconService, IconDirective } from '@ant-design/icons-angular';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DeleteOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline } from '@ant-design/icons-angular/icons';\nimport * as i1 from '@angular/platform-browser';\nimport * as i2 from 'ng-zorro-antd/core/config';\nimport * as i4 from '@angular/common/http';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_ICONS_USED_BY_ZORRO = [BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DeleteOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, StarFill, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline];\nconst NZ_ICONS = new InjectionToken('nz_icons');\nconst NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nconst DEFAULT_TWOTONE_COLOR = '#1890ff';\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\nclass NzIconService extends IconService {\n  get _disableDynamicLoading() {\n    return !this.platform.isBrowser;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n  normalizeSvgElement(svg) {\n    if (!svg.getAttribute('viewBox')) {\n      this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n    }\n    if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n      this._renderer.setAttribute(svg, 'width', '1em');\n      this._renderer.setAttribute(svg, 'height', '1em');\n    }\n    if (!svg.getAttribute('fill')) {\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\n    }\n  }\n  fetchFromIconfont(opt) {\n    const {\n      scriptUrl\n    } = opt;\n    if (this._document && !this.iconfontCache.has(scriptUrl)) {\n      const script = this._renderer.createElement('script');\n      this._renderer.setAttribute(script, 'src', scriptUrl);\n      this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n      this._renderer.appendChild(this._document.body, script);\n      this.iconfontCache.add(scriptUrl);\n    }\n  }\n  createIconfontIcon(type) {\n    return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n  }\n  constructor(rendererFactory, sanitizer, nzConfigService, platform, handler, _document, icons) {\n    super(rendererFactory, handler, _document, sanitizer, [...NZ_ICONS_USED_BY_ZORRO, ...(icons || [])]);\n    this.nzConfigService = nzConfigService;\n    this.platform = platform;\n    this.configUpdated$ = new Subject();\n    this.iconfontCache = new Set();\n    this.subscription = null;\n    this.onConfigChange();\n    this.configDefaultTwotoneColor();\n    this.configDefaultTheme();\n  }\n  onConfigChange() {\n    this.subscription = this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n      this.configDefaultTwotoneColor();\n      this.configDefaultTheme();\n      this.configUpdated$.next();\n    });\n  }\n  configDefaultTheme() {\n    const iconConfig = this.getConfig();\n    this.defaultTheme = iconConfig.nzTheme || 'outline';\n  }\n  configDefaultTwotoneColor() {\n    const iconConfig = this.getConfig();\n    const defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n    let primaryColor = DEFAULT_TWOTONE_COLOR;\n    if (defaultTwotoneColor) {\n      if (defaultTwotoneColor.startsWith('#')) {\n        primaryColor = defaultTwotoneColor;\n      } else {\n        warn('Twotone color must be a hex color!');\n      }\n    }\n    this.twoToneColor = {\n      primaryColor\n    };\n  }\n  getConfig() {\n    return this.nzConfigService.getConfigForComponent('icon') || {};\n  }\n}\nNzIconService.ɵfac = function NzIconService_Factory(t) {\n  return new (t || NzIconService)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i1.DomSanitizer), i0.ɵɵinject(i2.NzConfigService), i0.ɵɵinject(i3.Platform), i0.ɵɵinject(i4.HttpBackend, 8), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(NZ_ICONS, 8));\n};\nNzIconService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzIconService,\n  factory: NzIconService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzIconService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.RendererFactory2\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: i2.NzConfigService\n    }, {\n      type: i3.Platform\n    }, {\n      type: i4.HttpBackend,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NZ_ICONS]\n      }]\n    }];\n  }, null);\n})();\nconst NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\nclass NzIconPatchService {\n  constructor(extraIcons, rootIconService) {\n    this.extraIcons = extraIcons;\n    this.rootIconService = rootIconService;\n    this.patched = false;\n  }\n  doPatch() {\n    if (this.patched) {\n      return;\n    }\n    this.extraIcons.forEach(iconDefinition => this.rootIconService.addIcon(iconDefinition));\n    this.patched = true;\n  }\n}\nNzIconPatchService.ɵfac = function NzIconPatchService_Factory(t) {\n  return new (t || NzIconPatchService)(i0.ɵɵinject(NZ_ICONS_PATCH, 2), i0.ɵɵinject(NzIconService));\n};\nNzIconPatchService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzIconPatchService,\n  factory: NzIconPatchService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzIconPatchService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [NZ_ICONS_PATCH]\n      }]\n    }, {\n      type: NzIconService\n    }];\n  }, null);\n})();\nclass NzIconDirective extends IconDirective {\n  set nzSpin(value) {\n    this.spin = value;\n  }\n  set nzType(value) {\n    this.type = value;\n  }\n  set nzTheme(value) {\n    this.theme = value;\n  }\n  set nzTwotoneColor(value) {\n    this.twoToneColor = value;\n  }\n  set nzIconfont(value) {\n    this.iconfont = value;\n  }\n  constructor(ngZone, changeDetectorRef, elementRef, iconService, renderer, iconPatch) {\n    super(iconService, elementRef, renderer);\n    this.ngZone = ngZone;\n    this.changeDetectorRef = changeDetectorRef;\n    this.iconService = iconService;\n    this.renderer = renderer;\n    this.cacheClassName = null;\n    this.nzRotate = 0;\n    this.spin = false;\n    this.destroy$ = new Subject();\n    if (iconPatch) {\n      iconPatch.doPatch();\n    }\n    this.el = elementRef.nativeElement;\n  }\n  ngOnChanges(changes) {\n    const {\n      nzType,\n      nzTwotoneColor,\n      nzSpin,\n      nzTheme,\n      nzRotate\n    } = changes;\n    if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n      this.changeIcon2();\n    } else if (nzRotate) {\n      this.handleRotate(this.el.firstChild);\n    } else {\n      this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n    }\n  }\n  ngOnInit() {\n    this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n  }\n  /**\n   * If custom content is provided, try to normalize SVG elements.\n   */\n  ngAfterContentChecked() {\n    if (!this.type) {\n      const children = this.el.children;\n      let length = children.length;\n      if (!this.type && children.length) {\n        while (length--) {\n          const child = children[length];\n          if (child.tagName.toLowerCase() === 'svg') {\n            this.iconService.normalizeSvgElement(child);\n          }\n        }\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n  /**\n   * Replacement of `changeIcon` for more modifications.\n   */\n  changeIcon2() {\n    this.setClassName();\n    // The Angular zone is left deliberately before the SVG is set\n    // since `_changeIcon` spawns asynchronous tasks as promise and\n    // HTTP calls. This is used to reduce the number of change detections\n    // while the icon is being loaded dynamically.\n    this.ngZone.runOutsideAngular(() => {\n      from(this._changeIcon()).pipe(takeUntil(this.destroy$)).subscribe({\n        next: svgOrRemove => {\n          // Get back into the Angular zone after completing all the tasks.\n          // Since we manually run change detection locally, we have to re-enter\n          // the zone because the change detection might also be run on other local\n          // components, leading them to handle template functions outside of the Angular zone.\n          this.ngZone.run(() => {\n            // The _changeIcon method would call Renderer to remove the element of the old icon,\n            // which would call `markElementAsRemoved` eventually,\n            // so we should call `detectChanges` to tell Angular remove the DOM node.\n            // #7186\n            this.changeDetectorRef.detectChanges();\n            if (svgOrRemove) {\n              this.setSVGData(svgOrRemove);\n              this.handleSpin(svgOrRemove);\n              this.handleRotate(svgOrRemove);\n            }\n          });\n        },\n        error: warn\n      });\n    });\n  }\n  handleSpin(svg) {\n    if (this.spin || this.type === 'loading') {\n      this.renderer.addClass(svg, 'anticon-spin');\n    } else {\n      this.renderer.removeClass(svg, 'anticon-spin');\n    }\n  }\n  handleRotate(svg) {\n    if (this.nzRotate) {\n      this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n    } else {\n      this.renderer.removeAttribute(svg, 'style');\n    }\n  }\n  setClassName() {\n    if (this.cacheClassName) {\n      this.renderer.removeClass(this.el, this.cacheClassName);\n    }\n    this.cacheClassName = `anticon-${this.type}`;\n    this.renderer.addClass(this.el, this.cacheClassName);\n  }\n  setSVGData(svg) {\n    this.renderer.setAttribute(svg, 'data-icon', this.type);\n    this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n  }\n}\nNzIconDirective.ɵfac = function NzIconDirective_Factory(t) {\n  return new (t || NzIconDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzIconService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NzIconPatchService, 8));\n};\nNzIconDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzIconDirective,\n  selectors: [[\"\", \"nz-icon\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzIconDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"anticon\", true);\n    }\n  },\n  inputs: {\n    nzSpin: \"nzSpin\",\n    nzRotate: \"nzRotate\",\n    nzType: \"nzType\",\n    nzTheme: \"nzTheme\",\n    nzTwotoneColor: \"nzTwotoneColor\",\n    nzIconfont: \"nzIconfont\"\n  },\n  exportAs: [\"nzIcon\"],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n__decorate([InputBoolean()], NzIconDirective.prototype, \"nzSpin\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzIconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-icon]',\n      exportAs: 'nzIcon',\n      host: {\n        '[class.anticon]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: NzIconService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NzIconPatchService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzSpin: [{\n      type: Input\n    }],\n    nzRotate: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzTheme: [{\n      type: Input\n    }],\n    nzTwotoneColor: [{\n      type: Input\n    }],\n    nzIconfont: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzIconModule {\n  static forRoot(icons) {\n    return {\n      ngModule: NzIconModule,\n      providers: [{\n        provide: NZ_ICONS,\n        useValue: icons\n      }]\n    };\n  }\n  static forChild(icons) {\n    return {\n      ngModule: NzIconModule,\n      providers: [NzIconPatchService, {\n        provide: NZ_ICONS_PATCH,\n        useValue: icons\n      }]\n    };\n  }\n}\nNzIconModule.ɵfac = function NzIconModule_Factory(t) {\n  return new (t || NzIconModule)();\n};\nNzIconModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzIconModule\n});\nNzIconModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [PlatformModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzIconModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzIconDirective],\n      declarations: [NzIconDirective],\n      imports: [PlatformModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TWOTONE_COLOR, NZ_ICONS, NZ_ICONS_PATCH, NZ_ICONS_USED_BY_ZORRO, NZ_ICON_DEFAULT_TWOTONE_COLOR, NzIconDirective, NzIconModule, NzIconPatchService, NzIconService };","map":{"version":3,"names":["i3","PlatformModule","i0","InjectionToken","Injectable","Optional","Inject","Self","Directive","Input","NgModule","__decorate","Subject","from","takeUntil","IconService","IconDirective","warn","InputBoolean","DOCUMENT","BarsOutline","CalendarOutline","CaretUpFill","CaretUpOutline","CaretDownFill","CaretDownOutline","CheckCircleFill","CheckCircleOutline","CheckOutline","ClockCircleOutline","CloseCircleOutline","CloseCircleFill","CloseOutline","CopyOutline","DeleteOutline","DoubleLeftOutline","DoubleRightOutline","DownOutline","EditOutline","EllipsisOutline","ExclamationCircleFill","ExclamationCircleOutline","EyeOutline","FileFill","FileOutline","FilterFill","InfoCircleFill","InfoCircleOutline","LeftOutline","LoadingOutline","PaperClipOutline","QuestionCircleOutline","RightOutline","RotateRightOutline","RotateLeftOutline","StarFill","SearchOutline","UploadOutline","VerticalAlignTopOutline","UpOutline","SwapRightOutline","ZoomInOutline","ZoomOutOutline","i1","i2","i4","NZ_ICONS_USED_BY_ZORRO","NZ_ICONS","NZ_ICON_DEFAULT_TWOTONE_COLOR","DEFAULT_TWOTONE_COLOR","NzIconService","_disableDynamicLoading","platform","isBrowser","ngOnDestroy","subscription","unsubscribe","normalizeSvgElement","svg","getAttribute","_renderer","setAttribute","fetchFromIconfont","opt","scriptUrl","_document","iconfontCache","has","script","createElement","replace","appendChild","body","add","createIconfontIcon","type","_createSVGElementFromString","constructor","rendererFactory","sanitizer","nzConfigService","handler","icons","configUpdated$","Set","onConfigChange","configDefaultTwotoneColor","configDefaultTheme","getConfigChangeEventForComponent","subscribe","next","iconConfig","getConfig","defaultTheme","nzTheme","defaultTwotoneColor","nzTwotoneColor","primaryColor","startsWith","twoToneColor","getConfigForComponent","ɵfac","NzIconService_Factory","t","ɵɵinject","RendererFactory2","DomSanitizer","NzConfigService","Platform","HttpBackend","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","decorators","undefined","NZ_ICONS_PATCH","NzIconPatchService","extraIcons","rootIconService","patched","doPatch","forEach","iconDefinition","addIcon","NzIconPatchService_Factory","NzIconDirective","nzSpin","value","spin","nzType","theme","nzIconfont","iconfont","ngZone","changeDetectorRef","elementRef","iconService","renderer","iconPatch","cacheClassName","nzRotate","destroy$","el","nativeElement","ngOnChanges","changes","changeIcon2","handleRotate","firstChild","_setSVGElement","ngOnInit","className","trim","ngAfterContentChecked","children","length","child","tagName","toLowerCase","setClassName","runOutsideAngular","_changeIcon","pipe","svgOrRemove","run","detectChanges","setSVGData","handleSpin","error","addClass","removeClass","removeAttribute","NzIconDirective_Factory","ɵɵdirectiveInject","NgZone","ChangeDetectorRef","ElementRef","Renderer2","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","NzIconDirective_HostBindings","rf","ctx","ɵɵclassProp","inputs","exportAs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","prototype","selector","host","NzIconModule","forRoot","ngModule","providers","provide","useValue","forChild","NzIconModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/Users/kauriya/Documents/Projects/ASP.NET/WebAppShopStudy/web-shop-client/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-icon.mjs"],"sourcesContent":["import * as i3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, Self, Directive, Input, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject, from } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IconService, IconDirective } from '@ant-design/icons-angular';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DeleteOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline } from '@ant-design/icons-angular/icons';\nimport * as i1 from '@angular/platform-browser';\nimport * as i2 from 'ng-zorro-antd/core/config';\nimport * as i4 from '@angular/common/http';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_ICONS_USED_BY_ZORRO = [\n    BarsOutline,\n    CalendarOutline,\n    CaretUpFill,\n    CaretUpOutline,\n    CaretDownFill,\n    CaretDownOutline,\n    CheckCircleFill,\n    CheckCircleOutline,\n    CheckOutline,\n    ClockCircleOutline,\n    CloseCircleOutline,\n    CloseCircleFill,\n    CloseOutline,\n    CopyOutline,\n    DeleteOutline,\n    DoubleLeftOutline,\n    DoubleRightOutline,\n    DownOutline,\n    EditOutline,\n    EllipsisOutline,\n    ExclamationCircleFill,\n    ExclamationCircleOutline,\n    EyeOutline,\n    FileFill,\n    FileOutline,\n    FilterFill,\n    InfoCircleFill,\n    InfoCircleOutline,\n    LeftOutline,\n    LoadingOutline,\n    PaperClipOutline,\n    QuestionCircleOutline,\n    RightOutline,\n    RotateRightOutline,\n    RotateLeftOutline,\n    StarFill,\n    SearchOutline,\n    StarFill,\n    UploadOutline,\n    VerticalAlignTopOutline,\n    UpOutline,\n    SwapRightOutline,\n    ZoomInOutline,\n    ZoomOutOutline\n];\n\nconst NZ_ICONS = new InjectionToken('nz_icons');\nconst NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nconst DEFAULT_TWOTONE_COLOR = '#1890ff';\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\nclass NzIconService extends IconService {\n    get _disableDynamicLoading() {\n        return !this.platform.isBrowser;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n    normalizeSvgElement(svg) {\n        if (!svg.getAttribute('viewBox')) {\n            this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n        }\n        if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n            this._renderer.setAttribute(svg, 'width', '1em');\n            this._renderer.setAttribute(svg, 'height', '1em');\n        }\n        if (!svg.getAttribute('fill')) {\n            this._renderer.setAttribute(svg, 'fill', 'currentColor');\n        }\n    }\n    fetchFromIconfont(opt) {\n        const { scriptUrl } = opt;\n        if (this._document && !this.iconfontCache.has(scriptUrl)) {\n            const script = this._renderer.createElement('script');\n            this._renderer.setAttribute(script, 'src', scriptUrl);\n            this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n            this._renderer.appendChild(this._document.body, script);\n            this.iconfontCache.add(scriptUrl);\n        }\n    }\n    createIconfontIcon(type) {\n        return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n    }\n    constructor(rendererFactory, sanitizer, nzConfigService, platform, handler, _document, icons) {\n        super(rendererFactory, handler, _document, sanitizer, [...NZ_ICONS_USED_BY_ZORRO, ...(icons || [])]);\n        this.nzConfigService = nzConfigService;\n        this.platform = platform;\n        this.configUpdated$ = new Subject();\n        this.iconfontCache = new Set();\n        this.subscription = null;\n        this.onConfigChange();\n        this.configDefaultTwotoneColor();\n        this.configDefaultTheme();\n    }\n    onConfigChange() {\n        this.subscription = this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n            this.configDefaultTwotoneColor();\n            this.configDefaultTheme();\n            this.configUpdated$.next();\n        });\n    }\n    configDefaultTheme() {\n        const iconConfig = this.getConfig();\n        this.defaultTheme = iconConfig.nzTheme || 'outline';\n    }\n    configDefaultTwotoneColor() {\n        const iconConfig = this.getConfig();\n        const defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n        let primaryColor = DEFAULT_TWOTONE_COLOR;\n        if (defaultTwotoneColor) {\n            if (defaultTwotoneColor.startsWith('#')) {\n                primaryColor = defaultTwotoneColor;\n            }\n            else {\n                warn('Twotone color must be a hex color!');\n            }\n        }\n        this.twoToneColor = { primaryColor };\n    }\n    getConfig() {\n        return this.nzConfigService.getConfigForComponent('icon') || {};\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconService, deps: [{ token: i0.RendererFactory2 }, { token: i1.DomSanitizer }, { token: i2.NzConfigService }, { token: i3.Platform }, { token: i4.HttpBackend, optional: true }, { token: DOCUMENT, optional: true }, { token: NZ_ICONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.RendererFactory2 }, { type: i1.DomSanitizer }, { type: i2.NzConfigService }, { type: i3.Platform }, { type: i4.HttpBackend, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NZ_ICONS]\n                }] }]; } });\nconst NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\nclass NzIconPatchService {\n    constructor(extraIcons, rootIconService) {\n        this.extraIcons = extraIcons;\n        this.rootIconService = rootIconService;\n        this.patched = false;\n    }\n    doPatch() {\n        if (this.patched) {\n            return;\n        }\n        this.extraIcons.forEach(iconDefinition => this.rootIconService.addIcon(iconDefinition));\n        this.patched = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconPatchService, deps: [{ token: NZ_ICONS_PATCH, self: true }, { token: NzIconService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconPatchService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconPatchService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NZ_ICONS_PATCH]\n                }] }, { type: NzIconService }]; } });\n\nclass NzIconDirective extends IconDirective {\n    set nzSpin(value) {\n        this.spin = value;\n    }\n    set nzType(value) {\n        this.type = value;\n    }\n    set nzTheme(value) {\n        this.theme = value;\n    }\n    set nzTwotoneColor(value) {\n        this.twoToneColor = value;\n    }\n    set nzIconfont(value) {\n        this.iconfont = value;\n    }\n    constructor(ngZone, changeDetectorRef, elementRef, iconService, renderer, iconPatch) {\n        super(iconService, elementRef, renderer);\n        this.ngZone = ngZone;\n        this.changeDetectorRef = changeDetectorRef;\n        this.iconService = iconService;\n        this.renderer = renderer;\n        this.cacheClassName = null;\n        this.nzRotate = 0;\n        this.spin = false;\n        this.destroy$ = new Subject();\n        if (iconPatch) {\n            iconPatch.doPatch();\n        }\n        this.el = elementRef.nativeElement;\n    }\n    ngOnChanges(changes) {\n        const { nzType, nzTwotoneColor, nzSpin, nzTheme, nzRotate } = changes;\n        if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n            this.changeIcon2();\n        }\n        else if (nzRotate) {\n            this.handleRotate(this.el.firstChild);\n        }\n        else {\n            this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n        }\n    }\n    ngOnInit() {\n        this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n    }\n    /**\n     * If custom content is provided, try to normalize SVG elements.\n     */\n    ngAfterContentChecked() {\n        if (!this.type) {\n            const children = this.el.children;\n            let length = children.length;\n            if (!this.type && children.length) {\n                while (length--) {\n                    const child = children[length];\n                    if (child.tagName.toLowerCase() === 'svg') {\n                        this.iconService.normalizeSvgElement(child);\n                    }\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n    }\n    /**\n     * Replacement of `changeIcon` for more modifications.\n     */\n    changeIcon2() {\n        this.setClassName();\n        // The Angular zone is left deliberately before the SVG is set\n        // since `_changeIcon` spawns asynchronous tasks as promise and\n        // HTTP calls. This is used to reduce the number of change detections\n        // while the icon is being loaded dynamically.\n        this.ngZone.runOutsideAngular(() => {\n            from(this._changeIcon())\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                next: svgOrRemove => {\n                    // Get back into the Angular zone after completing all the tasks.\n                    // Since we manually run change detection locally, we have to re-enter\n                    // the zone because the change detection might also be run on other local\n                    // components, leading them to handle template functions outside of the Angular zone.\n                    this.ngZone.run(() => {\n                        // The _changeIcon method would call Renderer to remove the element of the old icon,\n                        // which would call `markElementAsRemoved` eventually,\n                        // so we should call `detectChanges` to tell Angular remove the DOM node.\n                        // #7186\n                        this.changeDetectorRef.detectChanges();\n                        if (svgOrRemove) {\n                            this.setSVGData(svgOrRemove);\n                            this.handleSpin(svgOrRemove);\n                            this.handleRotate(svgOrRemove);\n                        }\n                    });\n                },\n                error: warn\n            });\n        });\n    }\n    handleSpin(svg) {\n        if (this.spin || this.type === 'loading') {\n            this.renderer.addClass(svg, 'anticon-spin');\n        }\n        else {\n            this.renderer.removeClass(svg, 'anticon-spin');\n        }\n    }\n    handleRotate(svg) {\n        if (this.nzRotate) {\n            this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n        }\n        else {\n            this.renderer.removeAttribute(svg, 'style');\n        }\n    }\n    setClassName() {\n        if (this.cacheClassName) {\n            this.renderer.removeClass(this.el, this.cacheClassName);\n        }\n        this.cacheClassName = `anticon-${this.type}`;\n        this.renderer.addClass(this.el, this.cacheClassName);\n    }\n    setSVGData(svg) {\n        this.renderer.setAttribute(svg, 'data-icon', this.type);\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconDirective, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: NzIconService }, { token: i0.Renderer2 }, { token: NzIconPatchService, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzIconDirective, selector: \"[nz-icon]\", inputs: { nzSpin: \"nzSpin\", nzRotate: \"nzRotate\", nzType: \"nzType\", nzTheme: \"nzTheme\", nzTwotoneColor: \"nzTwotoneColor\", nzIconfont: \"nzIconfont\" }, host: { properties: { \"class.anticon\": \"true\" } }, exportAs: [\"nzIcon\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\n__decorate([\n    InputBoolean()\n], NzIconDirective.prototype, \"nzSpin\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nz-icon]',\n                    exportAs: 'nzIcon',\n                    host: {\n                        '[class.anticon]': 'true'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: NzIconService }, { type: i0.Renderer2 }, { type: NzIconPatchService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { nzSpin: [{\n                type: Input\n            }], nzRotate: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzTheme: [{\n                type: Input\n            }], nzTwotoneColor: [{\n                type: Input\n            }], nzIconfont: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzIconModule {\n    static forRoot(icons) {\n        return {\n            ngModule: NzIconModule,\n            providers: [\n                {\n                    provide: NZ_ICONS,\n                    useValue: icons\n                }\n            ]\n        };\n    }\n    static forChild(icons) {\n        return {\n            ngModule: NzIconModule,\n            providers: [\n                NzIconPatchService,\n                {\n                    provide: NZ_ICONS_PATCH,\n                    useValue: icons\n                }\n            ]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconModule, declarations: [NzIconDirective], imports: [PlatformModule], exports: [NzIconDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconModule, imports: [PlatformModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [NzIconDirective],\n                    declarations: [NzIconDirective],\n                    imports: [PlatformModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TWOTONE_COLOR, NZ_ICONS, NZ_ICONS_PATCH, NZ_ICONS_USED_BY_ZORRO, NZ_ICON_DEFAULT_TWOTONE_COLOR, NzIconDirective, NzIconModule, NzIconPatchService, NzIconService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}