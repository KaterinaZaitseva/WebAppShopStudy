{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Optional, Host, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const p_r8 = ctx.$implicit;\n    const i_r5 = i0.ɵɵnextContext(2).index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"current\", p_r8 === ctx_r7.countArray[i_r5]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", p_r8, \" \");\n  }\n}\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template, 2, 3, \"p\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.countSingleArray);\n  }\n}\nfunction NzBadgeSupComponent_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"transform\", \"translateY(\" + -ctx_r3.countArray[i_r5] * 100 + \"%)\");\n    i0.ɵɵproperty(\"nzNoAnimation\", ctx_r3.noAnimation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.nzDot && ctx_r3.countArray[i_r5] !== undefined);\n  }\n}\nfunction NzBadgeSupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_Template, 2, 4, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.maxNumberArray);\n  }\n}\nfunction NzBadgeSupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.nzOverflowCount, \"+\");\n  }\n}\nfunction NzBadgeComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\nfunction NzBadgeComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 3);\n    i0.ɵɵtemplate(3, NzBadgeComponent_ng_container_0_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"ant-badge-status-dot ant-badge-status-\", ctx_r0.nzStatus || ctx_r0.presetColor, \"\");\n    i0.ɵɵstyleProp(\"background\", !ctx_r0.presetColor && ctx_r0.nzColor);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.nzStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\nfunction NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-badge-sup\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzOffset\", ctx_r3.nzOffset)(\"nzSize\", ctx_r3.nzSize)(\"nzTitle\", ctx_r3.nzTitle)(\"nzStyle\", ctx_r3.nzStyle)(\"nzDot\", ctx_r3.nzDot)(\"nzOverflowCount\", ctx_r3.nzOverflowCount)(\"disableAnimation\", !!(ctx_r3.nzStandalone || ctx_r3.nzStatus || ctx_r3.nzColor || (ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)))(\"nzCount\", ctx_r3.nzCount)(\"noAnimation\", !!(ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation));\n  }\n}\nfunction NzBadgeComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template, 1, 9, \"nz-badge-sup\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showSup);\n  }\n}\nconst _c0 = [\"*\"];\nfunction NzRibbonComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.nzText);\n  }\n}\nconst badgePresetColors = ['pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeSupComponent {\n  constructor() {\n    this.nzStyle = null;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.disableAnimation = false;\n    this.noAnimation = false;\n    this.nzSize = 'default';\n    this.maxNumberArray = [];\n    this.countArray = [];\n    this.count = 0;\n    this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  }\n  generateMaxNumberArray() {\n    this.maxNumberArray = this.nzOverflowCount.toString().split('');\n  }\n  ngOnInit() {\n    this.generateMaxNumberArray();\n  }\n  ngOnChanges(changes) {\n    const {\n      nzOverflowCount,\n      nzCount\n    } = changes;\n    if (nzCount && typeof nzCount.currentValue === 'number') {\n      this.count = Math.max(0, nzCount.currentValue);\n      this.countArray = this.count.toString().split('').map(item => +item);\n    }\n    if (nzOverflowCount) {\n      this.generateMaxNumberArray();\n    }\n  }\n}\nNzBadgeSupComponent.ɵfac = function NzBadgeSupComponent_Factory(t) {\n  return new (t || NzBadgeSupComponent)();\n};\nNzBadgeSupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBadgeSupComponent,\n  selectors: [[\"nz-badge-sup\"]],\n  hostAttrs: [1, \"ant-scroll-number\"],\n  hostVars: 17,\n  hostBindings: function NzBadgeSupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"title\", ctx.nzTitle === null ? \"\" : ctx.nzTitle || ctx.nzCount);\n      i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.disableAnimation)(\"@zoomBadgeMotion\", undefined);\n      i0.ɵɵstyleMap(ctx.nzStyle);\n      i0.ɵɵstyleProp(\"right\", ctx.nzOffset && ctx.nzOffset[0] ? -ctx.nzOffset[0] : null, \"px\")(\"margin-top\", ctx.nzOffset && ctx.nzOffset[1] ? ctx.nzOffset[1] : null, \"px\");\n      i0.ɵɵclassProp(\"ant-badge-count\", !ctx.nzDot)(\"ant-badge-count-sm\", ctx.nzSize === \"small\")(\"ant-badge-dot\", ctx.nzDot)(\"ant-badge-multiple-words\", ctx.countArray.length >= 2);\n    }\n  },\n  inputs: {\n    nzOffset: \"nzOffset\",\n    nzTitle: \"nzTitle\",\n    nzStyle: \"nzStyle\",\n    nzDot: \"nzDot\",\n    nzOverflowCount: \"nzOverflowCount\",\n    disableAnimation: \"disableAnimation\",\n    nzCount: \"nzCount\",\n    noAnimation: \"noAnimation\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzBadgeSup\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"overflowTemplate\", \"\"], [\"class\", \"ant-scroll-number-only\", 3, \"nzNoAnimation\", \"transform\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only\", 3, \"nzNoAnimation\"], [4, \"ngIf\"], [\"class\", \"ant-scroll-number-only-unit\", 3, \"current\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only-unit\"]],\n  template: function NzBadgeSupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzBadgeSupComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.count <= ctx.nzOverflowCount)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i3.NzNoAnimationDirective],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBadgeMotion]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeSupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge-sup',\n      exportAs: 'nzBadgeSup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `,\n      host: {\n        class: 'ant-scroll-number',\n        '[@.disabled]': `disableAnimation`,\n        '[@zoomBadgeMotion]': '',\n        '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n        '[style]': `nzStyle`,\n        '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n        '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n        '[class.ant-badge-count]': `!nzDot`,\n        '[class.ant-badge-count-sm]': `nzSize === 'small'`,\n        '[class.ant-badge-dot]': `nzDot`,\n        '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzOffset: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    disableAnimation: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    noAnimation: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\nconst NZ_CONFIG_MODULE_NAME = 'badge';\nclass NzBadgeComponent {\n  constructor(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n    this.nzConfigService = nzConfigService;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.showSup = false;\n    this.presetColor = null;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.nzShowZero = false;\n    this.nzShowDot = true;\n    this.nzStandalone = false;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.nzColor = undefined;\n    this.nzStyle = null;\n    this.nzText = null;\n    this.nzSize = 'default';\n  }\n  ngOnInit() {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.prepareBadgeForRtl();\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.prepareBadgeForRtl();\n  }\n  ngOnChanges(changes) {\n    const {\n      nzColor,\n      nzShowDot,\n      nzDot,\n      nzCount,\n      nzShowZero\n    } = changes;\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n    if (nzShowDot || nzDot || nzCount || nzShowZero) {\n      this.showSup = this.nzShowDot && this.nzDot || typeof this.nzCount === 'number' && this.nzCount > 0 || typeof this.nzCount === 'number' && this.nzCount <= 0 && this.nzShowZero;\n    }\n  }\n  prepareBadgeForRtl() {\n    if (this.isRtlLayout) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n    }\n  }\n  get isRtlLayout() {\n    return this.dir === 'rtl';\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nNzBadgeComponent.ɵfac = function NzBadgeComponent_Factory(t) {\n  return new (t || NzBadgeComponent)(i0.ɵɵdirectiveInject(i1$1.NzConfigService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzNoAnimationDirective, 9));\n};\nNzBadgeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBadgeComponent,\n  selectors: [[\"nz-badge\"]],\n  hostAttrs: [1, \"ant-badge\"],\n  hostVars: 4,\n  hostBindings: function NzBadgeComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-badge-status\", ctx.nzStatus)(\"ant-badge-not-a-wrapper\", !!(ctx.nzStandalone || ctx.nzStatus || ctx.nzColor));\n    }\n  },\n  inputs: {\n    nzShowZero: \"nzShowZero\",\n    nzShowDot: \"nzShowDot\",\n    nzStandalone: \"nzStandalone\",\n    nzDot: \"nzDot\",\n    nzOverflowCount: \"nzOverflowCount\",\n    nzColor: \"nzColor\",\n    nzStyle: \"nzStyle\",\n    nzText: \"nzText\",\n    nzTitle: \"nzTitle\",\n    nzStatus: \"nzStatus\",\n    nzCount: \"nzCount\",\n    nzOffset: \"nzOffset\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzBadge\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [3, \"ngStyle\"], [1, \"ant-badge-status-text\"], [3, \"nzOffset\", \"nzSize\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\", 4, \"ngIf\"], [3, \"nzOffset\", \"nzSize\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\"]],\n  template: function NzBadgeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzBadgeComponent_ng_container_0_Template, 4, 7, \"ng-container\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, NzBadgeComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.nzStatus || ctx.nzColor);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzCount);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgStyle, i5.NzStringTemplateOutletDirective, NzBadgeSupComponent],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBadgeMotion]\n  },\n  changeDetection: 0\n});\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzDot\", void 0);\n__decorate([WithConfig()], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n__decorate([WithConfig()], NzBadgeComponent.prototype, \"nzColor\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge',\n      exportAs: 'nzBadge',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzSize]=\"nzSize\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `,\n      host: {\n        class: 'ant-badge',\n        '[class.ant-badge-status]': 'nzStatus',\n        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$1.NzConfigService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzShowZero: [{\n      type: Input\n    }],\n    nzShowDot: [{\n      type: Input\n    }],\n    nzStandalone: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    nzColor: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    nzOffset: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRibbonComponent {\n  constructor() {\n    this.nzPlacement = 'end';\n    this.nzText = null;\n    this.presetColor = null;\n  }\n  ngOnChanges(changes) {\n    const {\n      nzColor\n    } = changes;\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n  }\n}\nNzRibbonComponent.ɵfac = function NzRibbonComponent_Factory(t) {\n  return new (t || NzRibbonComponent)();\n};\nNzRibbonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzRibbonComponent,\n  selectors: [[\"nz-ribbon\"]],\n  hostAttrs: [1, \"ant-ribbon-wrapper\"],\n  inputs: {\n    nzColor: \"nzColor\",\n    nzPlacement: \"nzPlacement\",\n    nzText: \"nzText\"\n  },\n  exportAs: [\"nzRibbon\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 11,\n  consts: [[1, \"ant-ribbon\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-ribbon-corner\"], [1, \"ant-ribbon-text\"]],\n  template: function NzRibbonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵtemplate(2, NzRibbonComponent_ng_container_2_Template, 3, 1, \"ng-container\", 1);\n      i0.ɵɵelement(3, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.presetColor && \"ant-ribbon-color-\" + ctx.presetColor);\n      i0.ɵɵstyleProp(\"background-color\", !ctx.presetColor && ctx.nzColor);\n      i0.ɵɵclassProp(\"ant-ribbon-placement-end\", ctx.nzPlacement === \"end\")(\"ant-ribbon-placement-start\", ctx.nzPlacement === \"start\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"color\", !ctx.presetColor && ctx.nzColor);\n    }\n  },\n  dependencies: [i5.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzRibbonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-ribbon',\n      exportAs: 'nzRibbon',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">\n        <span class=\"ant-ribbon-text\">{{ nzText }}</span>\n      </ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `,\n      host: {\n        class: 'ant-ribbon-wrapper'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzColor: [{\n      type: Input\n    }],\n    nzPlacement: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeModule {}\nNzBadgeModule.ɵfac = function NzBadgeModule_Factory(t) {\n  return new (t || NzBadgeModule)();\n};\nNzBadgeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzBadgeModule\n});\nNzBadgeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n      exports: [NzBadgeComponent, NzRibbonComponent],\n      imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBadgeComponent, NzBadgeModule, NzRibbonComponent };","map":{"version":3,"names":["__decorate","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Optional","Host","NgModule","Subject","takeUntil","zoomBadgeMotion","i1$1","WithConfig","InputBoolean","i2","BidiModule","i3","NzNoAnimationModule","i1","CommonModule","i5","NzOutletModule","ObserversModule","NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","p_r8","$implicit","i_r5","ɵɵnextContext","index","ctx_r7","ɵɵclassProp","countArray","ɵɵadvance","ɵɵtextInterpolate1","NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r6","ɵɵproperty","countSingleArray","NzBadgeSupComponent_ng_container_0_span_1_Template","ctx_r3","ɵɵstyleProp","noAnimation","nzDot","undefined","NzBadgeSupComponent_ng_container_0_Template","ctx_r0","maxNumberArray","NzBadgeSupComponent_ng_template_1_Template","ctx_r2","nzOverflowCount","NzBadgeComponent_ng_container_0_ng_container_3_Template","ɵɵtextInterpolate","nzText","NzBadgeComponent_ng_container_0_Template","ɵɵelement","ɵɵclassMapInterpolate1","nzStatus","presetColor","nzColor","nzStyle","NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template","nzOffset","nzSize","nzTitle","nzStandalone","nzNoAnimation","nzCount","NzBadgeComponent_ng_container_2_Template","ctx_r1","showSup","_c0","NzRibbonComponent_ng_container_2_Template","badgePresetColors","NzBadgeSupComponent","constructor","disableAnimation","count","generateMaxNumberArray","toString","split","ngOnInit","ngOnChanges","changes","currentValue","Math","max","map","item","ɵfac","NzBadgeSupComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","NzBadgeSupComponent_HostBindings","ɵɵattribute","ɵɵsyntheticHostProperty","ɵɵstyleMap","length","inputs","exportAs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","NzBadgeSupComponent_Template","ɵɵtemplateRefExtractor","_r1","ɵɵreference","dependencies","NgForOf","NgIf","NzNoAnimationDirective","encapsulation","data","animation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","preserveWhitespaces","None","OnPush","animations","host","class","NZ_CONFIG_MODULE_NAME","NzBadgeComponent","nzConfigService","renderer","cdr","elementRef","directionality","_nzModuleName","dir","destroy$","nzShowZero","nzShowDot","change","pipe","subscribe","direction","prepareBadgeForRtl","detectChanges","value","indexOf","isRtlLayout","addClass","nativeElement","removeClass","ngOnDestroy","next","complete","NzBadgeComponent_Factory","ɵɵdirectiveInject","NzConfigService","Renderer2","ChangeDetectorRef","ElementRef","Directionality","NzBadgeComponent_HostBindings","ngContentSelectors","NzBadgeComponent_Template","ɵɵprojectionDef","ɵɵprojection","NgStyle","NzStringTemplateOutletDirective","prototype","decorators","NzRibbonComponent","nzPlacement","NzRibbonComponent_Factory","NzRibbonComponent_Template","ɵɵclassMap","NzBadgeModule","NzBadgeModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/Users/kauriya/Documents/Projects/ASP.NET/WebAppShopStudy/web-shop-client/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-badge.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Optional, Host, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst badgePresetColors = [\n    'pink',\n    'red',\n    'yellow',\n    'orange',\n    'cyan',\n    'green',\n    'blue',\n    'purple',\n    'geekblue',\n    'magenta',\n    'volcano',\n    'gold',\n    'lime'\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeSupComponent {\n    constructor() {\n        this.nzStyle = null;\n        this.nzDot = false;\n        this.nzOverflowCount = 99;\n        this.disableAnimation = false;\n        this.noAnimation = false;\n        this.nzSize = 'default';\n        this.maxNumberArray = [];\n        this.countArray = [];\n        this.count = 0;\n        this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    }\n    generateMaxNumberArray() {\n        this.maxNumberArray = this.nzOverflowCount.toString().split('');\n    }\n    ngOnInit() {\n        this.generateMaxNumberArray();\n    }\n    ngOnChanges(changes) {\n        const { nzOverflowCount, nzCount } = changes;\n        if (nzCount && typeof nzCount.currentValue === 'number') {\n            this.count = Math.max(0, nzCount.currentValue);\n            this.countArray = this.count\n                .toString()\n                .split('')\n                .map(item => +item);\n        }\n        if (nzOverflowCount) {\n            this.generateMaxNumberArray();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzBadgeSupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzBadgeSupComponent, selector: \"nz-badge-sup\", inputs: { nzOffset: \"nzOffset\", nzTitle: \"nzTitle\", nzStyle: \"nzStyle\", nzDot: \"nzDot\", nzOverflowCount: \"nzOverflowCount\", disableAnimation: \"disableAnimation\", nzCount: \"nzCount\", noAnimation: \"noAnimation\", nzSize: \"nzSize\" }, host: { properties: { \"@.disabled\": \"disableAnimation\", \"@zoomBadgeMotion\": \"\", \"attr.title\": \"nzTitle === null ? '' : nzTitle || nzCount\", \"style\": \"nzStyle\", \"style.right.px\": \"nzOffset && nzOffset[0] ? -nzOffset[0] : null\", \"style.margin-top.px\": \"nzOffset && nzOffset[1] ? nzOffset[1] : null\", \"class.ant-badge-count\": \"!nzDot\", \"class.ant-badge-count-sm\": \"nzSize === 'small'\", \"class.ant-badge-dot\": \"nzDot\", \"class.ant-badge-multiple-words\": \"countArray.length >= 2\" }, classAttribute: \"ant-scroll-number\" }, exportAs: [\"nzBadgeSup\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NzNoAnimationDirective, selector: \"[nzNoAnimation]\", inputs: [\"nzNoAnimation\"], exportAs: [\"nzNoAnimation\"] }], animations: [zoomBadgeMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzBadgeSupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-badge-sup',\n                    exportAs: 'nzBadgeSup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [zoomBadgeMotion],\n                    template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `,\n                    host: {\n                        class: 'ant-scroll-number',\n                        '[@.disabled]': `disableAnimation`,\n                        '[@zoomBadgeMotion]': '',\n                        '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n                        '[style]': `nzStyle`,\n                        '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n                        '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n                        '[class.ant-badge-count]': `!nzDot`,\n                        '[class.ant-badge-count-sm]': `nzSize === 'small'`,\n                        '[class.ant-badge-dot]': `nzDot`,\n                        '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzOffset: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzStyle: [{\n                type: Input\n            }], nzDot: [{\n                type: Input\n            }], nzOverflowCount: [{\n                type: Input\n            }], disableAnimation: [{\n                type: Input\n            }], nzCount: [{\n                type: Input\n            }], noAnimation: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'badge';\nclass NzBadgeComponent {\n    constructor(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n        this.nzConfigService = nzConfigService;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.showSup = false;\n        this.presetColor = null;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.nzShowZero = false;\n        this.nzShowDot = true;\n        this.nzStandalone = false;\n        this.nzDot = false;\n        this.nzOverflowCount = 99;\n        this.nzColor = undefined;\n        this.nzStyle = null;\n        this.nzText = null;\n        this.nzSize = 'default';\n    }\n    ngOnInit() {\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.prepareBadgeForRtl();\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.prepareBadgeForRtl();\n    }\n    ngOnChanges(changes) {\n        const { nzColor, nzShowDot, nzDot, nzCount, nzShowZero } = changes;\n        if (nzColor) {\n            this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n        }\n        if (nzShowDot || nzDot || nzCount || nzShowZero) {\n            this.showSup =\n                (this.nzShowDot && this.nzDot) ||\n                    (typeof this.nzCount === 'number' && this.nzCount > 0) ||\n                    (typeof this.nzCount === 'number' && this.nzCount <= 0 && this.nzShowZero);\n        }\n    }\n    prepareBadgeForRtl() {\n        if (this.isRtlLayout) {\n            this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n        }\n    }\n    get isRtlLayout() {\n        return this.dir === 'rtl';\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzBadgeComponent, deps: [{ token: i1$1.NzConfigService }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }, { token: i3.NzNoAnimationDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzBadgeComponent, selector: \"nz-badge\", inputs: { nzShowZero: \"nzShowZero\", nzShowDot: \"nzShowDot\", nzStandalone: \"nzStandalone\", nzDot: \"nzDot\", nzOverflowCount: \"nzOverflowCount\", nzColor: \"nzColor\", nzStyle: \"nzStyle\", nzText: \"nzText\", nzTitle: \"nzTitle\", nzStatus: \"nzStatus\", nzCount: \"nzCount\", nzOffset: \"nzOffset\", nzSize: \"nzSize\" }, host: { properties: { \"class.ant-badge-status\": \"nzStatus\", \"class.ant-badge-not-a-wrapper\": \"!!(nzStandalone || nzStatus || nzColor)\" }, classAttribute: \"ant-badge\" }, exportAs: [\"nzBadge\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzSize]=\"nzSize\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i5.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { kind: \"component\", type: NzBadgeSupComponent, selector: \"nz-badge-sup\", inputs: [\"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\", \"nzSize\"], exportAs: [\"nzBadgeSup\"] }], animations: [zoomBadgeMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzDot\", void 0);\n__decorate([\n    WithConfig()\n], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n__decorate([\n    WithConfig()\n], NzBadgeComponent.prototype, \"nzColor\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzBadgeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-badge',\n                    exportAs: 'nzBadge',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [zoomBadgeMotion],\n                    template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzSize]=\"nzSize\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `,\n                    host: {\n                        class: 'ant-badge',\n                        '[class.ant-badge-status]': 'nzStatus',\n                        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.NzConfigService }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i3.NzNoAnimationDirective, decorators: [{\n                    type: Host\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { nzShowZero: [{\n                type: Input\n            }], nzShowDot: [{\n                type: Input\n            }], nzStandalone: [{\n                type: Input\n            }], nzDot: [{\n                type: Input\n            }], nzOverflowCount: [{\n                type: Input\n            }], nzColor: [{\n                type: Input\n            }], nzStyle: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzStatus: [{\n                type: Input\n            }], nzCount: [{\n                type: Input\n            }], nzOffset: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRibbonComponent {\n    constructor() {\n        this.nzPlacement = 'end';\n        this.nzText = null;\n        this.presetColor = null;\n    }\n    ngOnChanges(changes) {\n        const { nzColor } = changes;\n        if (nzColor) {\n            this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzRibbonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzRibbonComponent, selector: \"nz-ribbon\", inputs: { nzColor: \"nzColor\", nzPlacement: \"nzPlacement\", nzText: \"nzText\" }, host: { classAttribute: \"ant-ribbon-wrapper\" }, exportAs: [\"nzRibbon\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">\n        <span class=\"ant-ribbon-text\">{{ nzText }}</span>\n      </ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i5.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzRibbonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-ribbon',\n                    exportAs: 'nzRibbon',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">\n        <span class=\"ant-ribbon-text\">{{ nzText }}</span>\n      </ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `,\n                    host: { class: 'ant-ribbon-wrapper' }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzColor: [{\n                type: Input\n            }], nzPlacement: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: NzBadgeModule, declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent], imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule], exports: [NzBadgeComponent, NzRibbonComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzBadgeModule, imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n                    exports: [NzBadgeComponent, NzRibbonComponent],\n                    imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBadgeComponent, NzBadgeModule, NzRibbonComponent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}