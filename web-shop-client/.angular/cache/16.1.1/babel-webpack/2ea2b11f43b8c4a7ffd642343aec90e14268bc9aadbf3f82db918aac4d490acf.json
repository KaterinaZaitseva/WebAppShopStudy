{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, forwardRef, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from 'ng-zorro-antd/core/form';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"inputElement\"];\nconst _c2 = [\"nz-checkbox\", \"\"];\nfunction NzCheckboxGroupComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 1);\n    i0.ɵɵlistener(\"nzCheckedChange\", function NzCheckboxGroupComponent_label_0_Template_label_nzCheckedChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const o_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onCheckedChange(o_r1, $event));\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const o_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzDisabled\", o_r1.disabled || ctx_r0.nzDisabled)(\"nzChecked\", o_r1.checked);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(o_r1.label);\n  }\n}\nclass NzCheckboxWrapperComponent {\n  constructor() {\n    this.nzOnChange = new EventEmitter();\n    this.checkboxList = [];\n  }\n  addCheckbox(value) {\n    this.checkboxList.push(value);\n  }\n  removeCheckbox(value) {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n  onChange() {\n    const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n    this.nzOnChange.emit(listOfCheckedValue);\n  }\n}\nNzCheckboxWrapperComponent.ɵfac = function NzCheckboxWrapperComponent_Factory(t) {\n  return new (t || NzCheckboxWrapperComponent)();\n};\nNzCheckboxWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCheckboxWrapperComponent,\n  selectors: [[\"nz-checkbox-wrapper\"]],\n  hostAttrs: [1, \"ant-checkbox-group\"],\n  outputs: {\n    nzOnChange: \"nzOnChange\"\n  },\n  exportAs: [\"nzCheckboxWrapper\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzCheckboxWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-checkbox-wrapper',\n      exportAs: 'nzCheckboxWrapper',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: ` <ng-content></ng-content> `,\n      host: {\n        class: 'ant-checkbox-group'\n      }\n    }]\n  }], null, {\n    nzOnChange: [{\n      type: Output\n    }]\n  });\n})();\nclass NzCheckboxComponent {\n  innerCheckedChange(checked) {\n    if (!this.nzDisabled) {\n      this.nzChecked = checked;\n      this.onChange(this.nzChecked);\n      this.nzCheckedChange.emit(this.nzChecked);\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.onChange();\n      }\n    }\n  }\n  writeValue(value) {\n    this.nzChecked = value;\n    this.cdr.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(disabled) {\n    this.nzDisabled = this.isNzDisableFirstChange && this.nzDisabled || disabled;\n    this.isNzDisableFirstChange = false;\n    this.cdr.markForCheck();\n  }\n  focus() {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n  blur() {\n    this.inputElement.nativeElement.blur();\n  }\n  constructor(ngZone, elementRef, nzCheckboxWrapperComponent, cdr, focusMonitor, directionality, nzFormStatusService) {\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.nzCheckboxWrapperComponent = nzCheckboxWrapperComponent;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.directionality = directionality;\n    this.nzFormStatusService = nzFormStatusService;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.isNzDisableFirstChange = true;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.nzCheckedChange = new EventEmitter();\n    this.nzValue = null;\n    this.nzAutoFocus = false;\n    this.nzDisabled = false;\n    this.nzIndeterminate = false;\n    this.nzChecked = false;\n    this.nzId = null;\n  }\n  ngOnInit() {\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.addCheckbox(this);\n    }\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.elementRef.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        event.preventDefault();\n        this.focus();\n        if (this.nzDisabled) {\n          return;\n        }\n        this.ngZone.run(() => {\n          this.innerCheckedChange(!this.nzChecked);\n          this.cdr.markForCheck();\n        });\n      });\n      fromEvent(this.inputElement.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => event.stopPropagation());\n    });\n  }\n  ngAfterViewInit() {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.removeCheckbox(this);\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nNzCheckboxComponent.ɵfac = function NzCheckboxComponent_Factory(t) {\n  return new (t || NzCheckboxComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzCheckboxWrapperComponent, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i4.NzFormStatusService, 8));\n};\nNzCheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCheckboxComponent,\n  selectors: [[\"\", \"nz-checkbox\", \"\"]],\n  viewQuery: function NzCheckboxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-checkbox-wrapper\"],\n  hostVars: 6,\n  hostBindings: function NzCheckboxComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-checkbox-wrapper-in-form-item\", !!ctx.nzFormStatusService)(\"ant-checkbox-wrapper-checked\", ctx.nzChecked)(\"ant-checkbox-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzValue: \"nzValue\",\n    nzAutoFocus: \"nzAutoFocus\",\n    nzDisabled: \"nzDisabled\",\n    nzIndeterminate: \"nzIndeterminate\",\n    nzChecked: \"nzChecked\",\n    nzId: \"nzId\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\"\n  },\n  exportAs: [\"nzCheckbox\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzCheckboxComponent),\n    multi: true\n  }])],\n  attrs: _c2,\n  ngContentSelectors: _c0,\n  decls: 6,\n  vars: 11,\n  consts: [[1, \"ant-checkbox\"], [\"type\", \"checkbox\", 1, \"ant-checkbox-input\", 3, \"checked\", \"ngModel\", \"disabled\", \"ngModelChange\"], [\"inputElement\", \"\"], [1, \"ant-checkbox-inner\"]],\n  template: function NzCheckboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0)(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"ngModelChange\", function NzCheckboxComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.innerCheckedChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"span\");\n      i0.ɵɵprojection(5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-checkbox-checked\", ctx.nzChecked && !ctx.nzIndeterminate)(\"ant-checkbox-disabled\", ctx.nzDisabled)(\"ant-checkbox-indeterminate\", ctx.nzIndeterminate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"checked\", ctx.nzChecked)(\"ngModel\", ctx.nzChecked)(\"disabled\", ctx.nzDisabled);\n      i0.ɵɵattribute(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null)(\"id\", ctx.nzId);\n    }\n  },\n  dependencies: [i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n  encapsulation: 2,\n  changeDetection: 0\n});\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzAutoFocus\", void 0);\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzDisabled\", void 0);\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzIndeterminate\", void 0);\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzChecked\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-checkbox]',\n      exportAs: 'nzCheckbox',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCheckboxComponent),\n        multi: true\n      }],\n      host: {\n        class: 'ant-checkbox-wrapper',\n        '[class.ant-checkbox-wrapper-in-form-item]': '!!nzFormStatusService',\n        '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n        '[class.ant-checkbox-rtl]': `dir === 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: NzCheckboxWrapperComponent,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.FocusMonitor\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i4.NzFormStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    inputElement: [{\n      type: ViewChild,\n      args: ['inputElement', {\n        static: true\n      }]\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzValue: [{\n      type: Input\n    }],\n    nzAutoFocus: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzIndeterminate: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    nzId: [{\n      type: Input\n    }]\n  });\n})();\nclass NzCheckboxGroupComponent {\n  trackByOption(_, option) {\n    return option.value;\n  }\n  onCheckedChange(option, checked) {\n    option.checked = checked;\n    this.onChange(this.options);\n  }\n  constructor(elementRef, focusMonitor, cdr, directionality) {\n    this.elementRef = elementRef;\n    this.focusMonitor = focusMonitor;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.options = [];\n    this.nzDisabled = false;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.isNzDisableFirstChange = true;\n  }\n  ngOnInit() {\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  writeValue(value) {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(disabled) {\n    this.nzDisabled = this.isNzDisableFirstChange && this.nzDisabled || disabled;\n    this.isNzDisableFirstChange = false;\n    this.cdr.markForCheck();\n  }\n}\nNzCheckboxGroupComponent.ɵfac = function NzCheckboxGroupComponent_Factory(t) {\n  return new (t || NzCheckboxGroupComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n};\nNzCheckboxGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCheckboxGroupComponent,\n  selectors: [[\"nz-checkbox-group\"]],\n  hostAttrs: [1, \"ant-checkbox-group\"],\n  hostVars: 2,\n  hostBindings: function NzCheckboxGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-checkbox-group-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzDisabled: \"nzDisabled\"\n  },\n  exportAs: [\"nzCheckboxGroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzCheckboxGroupComponent),\n    multi: true\n  }])],\n  decls: 1,\n  vars: 2,\n  consts: [[\"nz-checkbox\", \"\", \"class\", \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"nz-checkbox\", \"\", 1, \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\"]],\n  template: function NzCheckboxGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzCheckboxGroupComponent_label_0_Template, 3, 3, \"label\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.options)(\"ngForTrackBy\", ctx.trackByOption);\n    }\n  },\n  dependencies: [i3$1.NgForOf, NzCheckboxComponent],\n  encapsulation: 2\n});\n__decorate([InputBoolean()], NzCheckboxGroupComponent.prototype, \"nzDisabled\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-checkbox-group',\n      exportAs: 'nzCheckboxGroup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCheckboxGroupComponent),\n        multi: true\n      }],\n      host: {\n        class: 'ant-checkbox-group',\n        '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i2.FocusMonitor\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxModule {}\nNzCheckboxModule.ɵfac = function NzCheckboxModule_Factory(t) {\n  return new (t || NzCheckboxModule)();\n};\nNzCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzCheckboxModule\n});\nNzCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [BidiModule, CommonModule, FormsModule, A11yModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, FormsModule, A11yModule],\n      declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n      exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxModule, NzCheckboxWrapperComponent };","map":{"version":3,"names":["__decorate","i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Output","forwardRef","Optional","ViewChild","Input","NgModule","i5","NG_VALUE_ACCESSOR","FormsModule","Subject","fromEvent","takeUntil","InputBoolean","i2","A11yModule","i3","BidiModule","i4","i3$1","CommonModule","_c0","_c1","_c2","NzCheckboxGroupComponent_label_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NzCheckboxGroupComponent_label_0_Template_label_nzCheckedChange_0_listener","$event","restoredCtx","ɵɵrestoreView","o_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","onCheckedChange","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵproperty","disabled","nzDisabled","checked","ɵɵadvance","ɵɵtextInterpolate","label","NzCheckboxWrapperComponent","constructor","nzOnChange","checkboxList","addCheckbox","value","push","removeCheckbox","splice","indexOf","onChange","listOfCheckedValue","filter","item","nzChecked","map","nzValue","emit","ɵfac","NzCheckboxWrapperComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","outputs","exportAs","ngContentSelectors","decls","vars","template","NzCheckboxWrapperComponent_Template","ɵɵprojectionDef","ɵɵprojection","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","preserveWhitespaces","OnPush","None","host","class","NzCheckboxComponent","innerCheckedChange","nzCheckedChange","nzCheckboxWrapperComponent","writeValue","cdr","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isNzDisableFirstChange","focus","focusMonitor","focusVia","inputElement","blur","nativeElement","ngZone","elementRef","directionality","nzFormStatusService","dir","destroy$","nzAutoFocus","nzIndeterminate","nzId","ngOnInit","monitor","pipe","subscribe","focusOrigin","Promise","resolve","then","change","direction","detectChanges","runOutsideAngular","event","preventDefault","run","stopPropagation","ngAfterViewInit","ngOnDestroy","stopMonitoring","next","complete","NzCheckboxComponent_Factory","ɵɵdirectiveInject","NgZone","ElementRef","ChangeDetectorRef","FocusMonitor","Directionality","NzFormStatusService","viewQuery","NzCheckboxComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","NzCheckboxComponent_HostBindings","ɵɵclassProp","inputs","features","ɵɵProvidersFeature","provide","useExisting","multi","attrs","consts","NzCheckboxComponent_Template","NzCheckboxComponent_Template_input_ngModelChange_1_listener","ɵɵelement","ɵɵattribute","dependencies","CheckboxControlValueAccessor","NgControlStatus","NgModel","prototype","providers","decorators","static","NzCheckboxGroupComponent","trackByOption","_","option","options","NzCheckboxGroupComponent_Factory","NzCheckboxGroupComponent_HostBindings","NzCheckboxGroupComponent_Template","ɵɵtemplate","NgForOf","NzCheckboxModule","NzCheckboxModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/Users/kauriya/Documents/Projects/ASP.NET/WebAppShopStudy/web-shop-client/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-checkbox.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, forwardRef, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from 'ng-zorro-antd/core/form';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxWrapperComponent {\n    constructor() {\n        this.nzOnChange = new EventEmitter();\n        this.checkboxList = [];\n    }\n    addCheckbox(value) {\n        this.checkboxList.push(value);\n    }\n    removeCheckbox(value) {\n        this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n    }\n    onChange() {\n        const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n        this.nzOnChange.emit(listOfCheckedValue);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxWrapperComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzCheckboxWrapperComponent, selector: \"nz-checkbox-wrapper\", outputs: { nzOnChange: \"nzOnChange\" }, host: { classAttribute: \"ant-checkbox-group\" }, exportAs: [\"nzCheckboxWrapper\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxWrapperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-checkbox-wrapper',\n                    exportAs: 'nzCheckboxWrapper',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: ` <ng-content></ng-content> `,\n                    host: {\n                        class: 'ant-checkbox-group'\n                    }\n                }]\n        }], propDecorators: { nzOnChange: [{\n                type: Output\n            }] } });\n\nclass NzCheckboxComponent {\n    innerCheckedChange(checked) {\n        if (!this.nzDisabled) {\n            this.nzChecked = checked;\n            this.onChange(this.nzChecked);\n            this.nzCheckedChange.emit(this.nzChecked);\n            if (this.nzCheckboxWrapperComponent) {\n                this.nzCheckboxWrapperComponent.onChange();\n            }\n        }\n    }\n    writeValue(value) {\n        this.nzChecked = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = (this.isNzDisableFirstChange && this.nzDisabled) || disabled;\n        this.isNzDisableFirstChange = false;\n        this.cdr.markForCheck();\n    }\n    focus() {\n        this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n    blur() {\n        this.inputElement.nativeElement.blur();\n    }\n    constructor(ngZone, elementRef, nzCheckboxWrapperComponent, cdr, focusMonitor, directionality, nzFormStatusService) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.nzCheckboxWrapperComponent = nzCheckboxWrapperComponent;\n        this.cdr = cdr;\n        this.focusMonitor = focusMonitor;\n        this.directionality = directionality;\n        this.nzFormStatusService = nzFormStatusService;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.isNzDisableFirstChange = true;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.nzCheckedChange = new EventEmitter();\n        this.nzValue = null;\n        this.nzAutoFocus = false;\n        this.nzDisabled = false;\n        this.nzIndeterminate = false;\n        this.nzChecked = false;\n        this.nzId = null;\n    }\n    ngOnInit() {\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n        if (this.nzCheckboxWrapperComponent) {\n            this.nzCheckboxWrapperComponent.addCheckbox(this);\n        }\n        this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.elementRef.nativeElement, 'click')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => {\n                event.preventDefault();\n                this.focus();\n                if (this.nzDisabled) {\n                    return;\n                }\n                this.ngZone.run(() => {\n                    this.innerCheckedChange(!this.nzChecked);\n                    this.cdr.markForCheck();\n                });\n            });\n            fromEvent(this.inputElement.nativeElement, 'click')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => event.stopPropagation());\n        });\n    }\n    ngAfterViewInit() {\n        if (this.nzAutoFocus) {\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        if (this.nzCheckboxWrapperComponent) {\n            this.nzCheckboxWrapperComponent.removeCheckbox(this);\n        }\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: NzCheckboxWrapperComponent, optional: true }, { token: i0.ChangeDetectorRef }, { token: i2.FocusMonitor }, { token: i3.Directionality, optional: true }, { token: i4.NzFormStatusService, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzCheckboxComponent, selector: \"[nz-checkbox]\", inputs: { nzValue: \"nzValue\", nzAutoFocus: \"nzAutoFocus\", nzDisabled: \"nzDisabled\", nzIndeterminate: \"nzIndeterminate\", nzChecked: \"nzChecked\", nzId: \"nzId\" }, outputs: { nzCheckedChange: \"nzCheckedChange\" }, host: { properties: { \"class.ant-checkbox-wrapper-in-form-item\": \"!!nzFormStatusService\", \"class.ant-checkbox-wrapper-checked\": \"nzChecked\", \"class.ant-checkbox-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-checkbox-wrapper\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzCheckboxComponent),\n                multi: true\n            }\n        ], viewQueries: [{ propertyName: \"inputElement\", first: true, predicate: [\"inputElement\"], descendants: true, static: true }], exportAs: [\"nzCheckbox\"], ngImport: i0, template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i5.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzAutoFocus\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzIndeterminate\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzChecked\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[nz-checkbox]',\n                    exportAs: 'nzCheckbox',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzCheckboxComponent),\n                            multi: true\n                        }\n                    ],\n                    host: {\n                        class: 'ant-checkbox-wrapper',\n                        '[class.ant-checkbox-wrapper-in-form-item]': '!!nzFormStatusService',\n                        '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n                        '[class.ant-checkbox-rtl]': `dir === 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: NzCheckboxWrapperComponent, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.FocusMonitor }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.NzFormStatusService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { inputElement: [{\n                type: ViewChild,\n                args: ['inputElement', { static: true }]\n            }], nzCheckedChange: [{\n                type: Output\n            }], nzValue: [{\n                type: Input\n            }], nzAutoFocus: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzIndeterminate: [{\n                type: Input\n            }], nzChecked: [{\n                type: Input\n            }], nzId: [{\n                type: Input\n            }] } });\n\nclass NzCheckboxGroupComponent {\n    trackByOption(_, option) {\n        return option.value;\n    }\n    onCheckedChange(option, checked) {\n        option.checked = checked;\n        this.onChange(this.options);\n    }\n    constructor(elementRef, focusMonitor, cdr, directionality) {\n        this.elementRef = elementRef;\n        this.focusMonitor = focusMonitor;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.options = [];\n        this.nzDisabled = false;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.isNzDisableFirstChange = true;\n    }\n    ngOnInit() {\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    writeValue(value) {\n        this.options = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = (this.isNzDisableFirstChange && this.nzDisabled) || disabled;\n        this.isNzDisableFirstChange = false;\n        this.cdr.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxGroupComponent, deps: [{ token: i0.ElementRef }, { token: i2.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: i3.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzCheckboxGroupComponent, selector: \"nz-checkbox-group\", inputs: { nzDisabled: \"nzDisabled\" }, host: { properties: { \"class.ant-checkbox-group-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-checkbox-group\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzCheckboxGroupComponent),\n                multi: true\n            }\n        ], exportAs: [\"nzCheckboxGroup\"], ngImport: i0, template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: NzCheckboxComponent, selector: \"[nz-checkbox]\", inputs: [\"nzValue\", \"nzAutoFocus\", \"nzDisabled\", \"nzIndeterminate\", \"nzChecked\", \"nzId\"], outputs: [\"nzCheckedChange\"], exportAs: [\"nzCheckbox\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzCheckboxGroupComponent.prototype, \"nzDisabled\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-checkbox-group',\n                    exportAs: 'nzCheckboxGroup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzCheckboxGroupComponent),\n                            multi: true\n                        }\n                    ],\n                    host: {\n                        class: 'ant-checkbox-group',\n                        '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i2.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { nzDisabled: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxModule, declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent], imports: [BidiModule, CommonModule, FormsModule, A11yModule], exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxModule, imports: [BidiModule, CommonModule, FormsModule, A11yModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, FormsModule, A11yModule],\n                    declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n                    exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxModule, NzCheckboxWrapperComponent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}