{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./token-storage.service\";\nexport class AuthorizationService {\n  constructor(http, tokenStorageService) {\n    this.http = http;\n    this.tokenStorageService = tokenStorageService;\n    this.authorizeUrl = 'https://localhost:44351/api/Authorization/Authorize';\n    this.registerUrl = 'https://localhost:44351/api/Authorization/Register';\n  }\n  logIn(userAuthModel) {\n    return this.http.post(this.authorizeUrl, userAuthModel).pipe(tap(userResponseAuthModel => {\n      if (userResponseAuthModel != null) {\n        this.tokenStorageService.saveUser(userResponseAuthModel);\n        this.userResponseAuthModel = userResponseAuthModel;\n      }\n    }));\n  }\n  logOut() {\n    this.tokenStorageService.deleteUser();\n  }\n  signUp(userRegModel) {\n    return this.http.post(this.registerUrl, userRegModel);\n  }\n}\nAuthorizationService.ɵfac = function AuthorizationService_Factory(t) {\n  return new (t || AuthorizationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenStorageService));\n};\nAuthorizationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthorizationService,\n  factory: AuthorizationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["tap","AuthorizationService","constructor","http","tokenStorageService","authorizeUrl","registerUrl","logIn","userAuthModel","post","pipe","userResponseAuthModel","saveUser","logOut","deleteUser","signUp","userRegModel","i0","ɵɵinject","i1","HttpClient","i2","TokenStorageService","factory","ɵfac","providedIn"],"sources":["/Users/kauriya/Documents/Projects/ASP.NET/WebAppShopStudy/web-shop-client/src/app/services/authorization.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, tap, catchError } from 'rxjs';\n\nimport { IUserAuthorizationModel } from '../models/user-authorization.model';\nimport { IUserResponseAuthorizationModel } from '../models/user-response-authorization.model';\nimport { TokenStorageService } from './token-storage.service';\nimport { IUserRegistrationModel } from '../models/user-registration.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n\n  constructor(private http: HttpClient,\n    private tokenStorageService: TokenStorageService\n  ) { }\n\n  private authorizeUrl = 'https://localhost:44351/api/Authorization/Authorize';\n  private registerUrl = 'https://localhost:44351/api/Authorization/Register';\n  userResponseAuthModel: IUserResponseAuthorizationModel; \n\n  logIn(userAuthModel: IUserAuthorizationModel): Observable<IUserResponseAuthorizationModel> {\n    return this.http.post<IUserResponseAuthorizationModel>(this.authorizeUrl, userAuthModel)\n      .pipe(\n        tap(userResponseAuthModel => {\n          if(userResponseAuthModel != null) {\n            this.tokenStorageService.saveUser(userResponseAuthModel);\n            this.userResponseAuthModel = userResponseAuthModel;\n          }\n        })\n      )\n  }\n\n  logOut(): void {\n    this.tokenStorageService.deleteUser();\n  }\n\n  signUp(userRegModel: IUserRegistrationModel) {\n    return this.http.post(this.registerUrl, userRegModel);\n  }\n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAoB,MAAM;;;;AAUlD,OAAM,MAAOC,oBAAoB;EAE/BC,YAAoBC,IAAgB,EAC1BC,mBAAwC;IAD9B,KAAAD,IAAI,GAAJA,IAAI;IACd,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAGrB,KAAAC,YAAY,GAAG,qDAAqD;IACpE,KAAAC,WAAW,GAAG,oDAAoD;EAHtE;EAMJC,KAAKA,CAACC,aAAsC;IAC1C,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAkC,IAAI,CAACJ,YAAY,EAAEG,aAAa,CAAC,CACrFE,IAAI,CACHV,GAAG,CAACW,qBAAqB,IAAG;MAC1B,IAAGA,qBAAqB,IAAI,IAAI,EAAE;QAChC,IAAI,CAACP,mBAAmB,CAACQ,QAAQ,CAACD,qBAAqB,CAAC;QACxD,IAAI,CAACA,qBAAqB,GAAGA,qBAAqB;;IAEtD,CAAC,CAAC,CACH;EACL;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACT,mBAAmB,CAACU,UAAU,EAAE;EACvC;EAEAC,MAAMA,CAACC,YAAoC;IACzC,OAAO,IAAI,CAACb,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,WAAW,EAAEU,YAAY,CAAC;EACvD;;AA5BWf,oBAAoB,C;mBAApBA,oBAAoB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;AAApBrB,oBAAoB,C;SAApBA,oBAAoB;EAAAsB,OAAA,EAApBtB,oBAAoB,CAAAuB,IAAA;EAAAC,UAAA,EAFnB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}