{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterProductsPipe {\n  transform(products, search) {\n    if (search.length === 0) return products;\n    return products.filter(p => p.name.toLowerCase().includes(search.toLowerCase()));\n  }\n}\nFilterProductsPipe.ɵfac = function FilterProductsPipe_Factory(t) {\n  return new (t || FilterProductsPipe)();\n};\nFilterProductsPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filterProducts\",\n  type: FilterProductsPipe,\n  pure: true\n});","map":{"version":3,"names":["FilterProductsPipe","transform","products","search","length","filter","p","name","toLowerCase","includes","pure"],"sources":["/Users/kauriya/Documents/Projects/ASP.NET/WebAppShopStudy/web-shop-client/src/app/pipes/filter-products.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { IProductModel } from '../models/product-model';\n\n@Pipe({\n  name: 'filterProducts'\n})\nexport class FilterProductsPipe implements PipeTransform {\n\n  transform(products: IProductModel[], search: string): IProductModel[] {\n    if(search.length === 0) return products\n    return products.filter(p => p.name.toLowerCase().includes(search.toLowerCase()));\n  }\n\n}\n"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAE7BC,SAASA,CAACC,QAAyB,EAAEC,MAAc;IACjD,IAAGA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE,OAAOF,QAAQ;IACvC,OAAOA,QAAQ,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACN,MAAM,CAACK,WAAW,EAAE,CAAC,CAAC;EAClF;;AALWR,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;;QAAlBA,kBAAkB;EAAAU,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}