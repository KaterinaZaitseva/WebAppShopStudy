{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { BidiModule } from '@angular/cdk/bidi';\nconst _c0 = [\"textEl\"];\nfunction NzAvatarComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.nzIcon);\n  }\n}\nfunction NzAvatarComponent_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 4);\n    i0.ɵɵlistener(\"error\", function NzAvatarComponent_img_1_Template_img_error_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.imgError($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.nzSrc, i0.ɵɵsanitizeUrl);\n    i0.ɵɵattribute(\"srcset\", ctx_r1.nzSrcSet)(\"alt\", ctx_r1.nzAlt);\n  }\n}\nfunction NzAvatarComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5, 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\nconst _c1 = [\"*\"];\nconst NZ_CONFIG_MODULE_NAME = 'avatar';\nclass NzAvatarComponent {\n  constructor(nzConfigService, elementRef, cdr, platform, ngZone) {\n    this.nzConfigService = nzConfigService;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.platform = platform;\n    this.ngZone = ngZone;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzShape = 'circle';\n    this.nzSize = 'default';\n    this.nzGap = 4;\n    this.nzError = new EventEmitter();\n    this.hasText = false;\n    this.hasSrc = true;\n    this.hasIcon = false;\n    this.classMap = {};\n    this.customSize = null;\n    this.el = this.elementRef.nativeElement;\n  }\n  imgError($event) {\n    this.nzError.emit($event);\n    if (!$event.defaultPrevented) {\n      this.hasSrc = false;\n      this.hasIcon = false;\n      this.hasText = false;\n      if (this.nzIcon) {\n        this.hasIcon = true;\n      } else if (this.nzText) {\n        this.hasText = true;\n      }\n      this.cdr.detectChanges();\n      this.setSizeStyle();\n      this.notifyCalc();\n    }\n  }\n  ngOnChanges() {\n    this.hasText = !this.nzSrc && !!this.nzText;\n    this.hasIcon = !this.nzSrc && !!this.nzIcon;\n    this.hasSrc = !!this.nzSrc;\n    this.setSizeStyle();\n    this.notifyCalc();\n  }\n  calcStringSize() {\n    if (!this.hasText) {\n      return;\n    }\n    const textEl = this.textEl.nativeElement;\n    const childrenWidth = textEl.offsetWidth;\n    const avatarWidth = this.el.getBoundingClientRect().width;\n    const offset = this.nzGap * 2 < avatarWidth ? this.nzGap * 2 : 8;\n    const scale = avatarWidth - offset < childrenWidth ? (avatarWidth - offset) / childrenWidth : 1;\n    textEl.style.transform = `scale(${scale}) translateX(-50%)`;\n    textEl.style.lineHeight = this.customSize || '';\n  }\n  notifyCalc() {\n    // If use ngAfterViewChecked, always demands more computations, so......\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.calcStringSize();\n        });\n      });\n    }\n  }\n  setSizeStyle() {\n    if (typeof this.nzSize === 'number') {\n      this.customSize = `${this.nzSize}px`;\n    } else {\n      this.customSize = null;\n    }\n    this.cdr.markForCheck();\n  }\n}\nNzAvatarComponent.ɵfac = function NzAvatarComponent_Factory(t) {\n  return new (t || NzAvatarComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nNzAvatarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzAvatarComponent,\n  selectors: [[\"nz-avatar\"]],\n  viewQuery: function NzAvatarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-avatar\"],\n  hostVars: 20,\n  hostBindings: function NzAvatarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.customSize)(\"height\", ctx.customSize)(\"line-height\", ctx.customSize)(\"font-size\", ctx.hasIcon && ctx.customSize ? ctx.nzSize / 2 : null, \"px\");\n      i0.ɵɵclassProp(\"ant-avatar-lg\", ctx.nzSize === \"large\")(\"ant-avatar-sm\", ctx.nzSize === \"small\")(\"ant-avatar-square\", ctx.nzShape === \"square\")(\"ant-avatar-circle\", ctx.nzShape === \"circle\")(\"ant-avatar-icon\", ctx.nzIcon)(\"ant-avatar-image\", ctx.hasSrc);\n    }\n  },\n  inputs: {\n    nzShape: \"nzShape\",\n    nzSize: \"nzSize\",\n    nzGap: \"nzGap\",\n    nzText: \"nzText\",\n    nzSrc: \"nzSrc\",\n    nzSrcSet: \"nzSrcSet\",\n    nzAlt: \"nzAlt\",\n    nzIcon: \"nzIcon\"\n  },\n  outputs: {\n    nzError: \"nzError\"\n  },\n  exportAs: [\"nzAvatar\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 3,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [3, \"src\", \"error\", 4, \"ngIf\"], [\"class\", \"ant-avatar-string\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [3, \"src\", \"error\"], [1, \"ant-avatar-string\"], [\"textEl\", \"\"]],\n  template: function NzAvatarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzAvatarComponent_span_0_Template, 1, 1, \"span\", 0);\n      i0.ɵɵtemplate(1, NzAvatarComponent_img_1_Template, 1, 3, \"img\", 1);\n      i0.ɵɵtemplate(2, NzAvatarComponent_span_2_Template, 3, 1, \"span\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.nzIcon && ctx.hasIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzSrc && ctx.hasSrc);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzText && ctx.hasText);\n    }\n  },\n  dependencies: [i3.NgIf, i4.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n__decorate([WithConfig()], NzAvatarComponent.prototype, \"nzShape\", void 0);\n__decorate([WithConfig()], NzAvatarComponent.prototype, \"nzSize\", void 0);\n__decorate([WithConfig(), InputNumber()], NzAvatarComponent.prototype, \"nzGap\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAvatarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-avatar',\n      exportAs: 'nzAvatar',\n      template: `\n    <span nz-icon *ngIf=\"nzIcon && hasIcon\" [nzType]=\"nzIcon\"></span>\n    <img *ngIf=\"nzSrc && hasSrc\" [src]=\"nzSrc\" [attr.srcset]=\"nzSrcSet\" [attr.alt]=\"nzAlt\" (error)=\"imgError($event)\" />\n    <span class=\"ant-avatar-string\" #textEl *ngIf=\"nzText && hasText\">{{ nzText }}</span>\n  `,\n      host: {\n        class: 'ant-avatar',\n        '[class.ant-avatar-lg]': `nzSize === 'large'`,\n        '[class.ant-avatar-sm]': `nzSize === 'small'`,\n        '[class.ant-avatar-square]': `nzShape === 'square'`,\n        '[class.ant-avatar-circle]': `nzShape === 'circle'`,\n        '[class.ant-avatar-icon]': `nzIcon`,\n        '[class.ant-avatar-image]': `hasSrc `,\n        '[style.width]': 'customSize',\n        '[style.height]': 'customSize',\n        '[style.line-height]': 'customSize',\n        // nzSize type is number when customSize is true\n        '[style.font-size.px]': '(hasIcon && customSize) ? $any(nzSize) / 2 : null'\n      },\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Platform\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    nzShape: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzGap: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzSrc: [{\n      type: Input\n    }],\n    nzSrcSet: [{\n      type: Input\n    }],\n    nzAlt: [{\n      type: Input\n    }],\n    nzIcon: [{\n      type: Input\n    }],\n    nzError: [{\n      type: Output\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAvatarGroupComponent {}\nNzAvatarGroupComponent.ɵfac = function NzAvatarGroupComponent_Factory(t) {\n  return new (t || NzAvatarGroupComponent)();\n};\nNzAvatarGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzAvatarGroupComponent,\n  selectors: [[\"nz-avatar-group\"]],\n  hostAttrs: [1, \"ant-avatar-group\"],\n  exportAs: [\"nzAvatarGroup\"],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function NzAvatarGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAvatarGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-avatar-group',\n      exportAs: 'nzAvatarGroup',\n      template: ` <ng-content></ng-content> `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'ant-avatar-group'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAvatarModule {}\nNzAvatarModule.ɵfac = function NzAvatarModule_Factory(t) {\n  return new (t || NzAvatarModule)();\n};\nNzAvatarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzAvatarModule\n});\nNzAvatarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [BidiModule, CommonModule, NzIconModule, PlatformModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAvatarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzAvatarComponent, NzAvatarGroupComponent],\n      exports: [NzAvatarComponent, NzAvatarGroupComponent],\n      imports: [BidiModule, CommonModule, NzIconModule, PlatformModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzAvatarComponent, NzAvatarGroupComponent, NzAvatarModule };","map":{"version":3,"names":["__decorate","i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","NgModule","i1","WithConfig","InputNumber","i2","PlatformModule","i3","CommonModule","i4","NzIconModule","BidiModule","_c0","NzAvatarComponent_span_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","nzIcon","NzAvatarComponent_img_1_Template","_r4","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NzAvatarComponent_img_1_Template_img_error_0_listener","$event","ɵɵrestoreView","ctx_r3","ɵɵresetView","imgError","ɵɵelementEnd","ctx_r1","nzSrc","ɵɵsanitizeUrl","ɵɵattribute","nzSrcSet","nzAlt","NzAvatarComponent_span_2_Template","ɵɵtext","ctx_r2","ɵɵadvance","ɵɵtextInterpolate","nzText","_c1","NZ_CONFIG_MODULE_NAME","NzAvatarComponent","constructor","nzConfigService","elementRef","cdr","platform","ngZone","_nzModuleName","nzShape","nzSize","nzGap","nzError","hasText","hasSrc","hasIcon","classMap","customSize","el","nativeElement","emit","defaultPrevented","detectChanges","setSizeStyle","notifyCalc","ngOnChanges","calcStringSize","textEl","childrenWidth","offsetWidth","avatarWidth","getBoundingClientRect","width","offset","scale","style","transform","lineHeight","isBrowser","runOutsideAngular","setTimeout","markForCheck","ɵfac","NzAvatarComponent_Factory","t","ɵɵdirectiveInject","NzConfigService","ElementRef","ChangeDetectorRef","Platform","NgZone","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","NzAvatarComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","NzAvatarComponent_HostBindings","ɵɵstyleProp","ɵɵclassProp","inputs","outputs","exportAs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","NzAvatarComponent_Template","ɵɵtemplate","dependencies","NgIf","NzIconDirective","encapsulation","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","selector","host","class","preserveWhitespaces","OnPush","None","static","NzAvatarGroupComponent","NzAvatarGroupComponent_Factory","ngContentSelectors","NzAvatarGroupComponent_Template","ɵɵprojectionDef","ɵɵprojection","NzAvatarModule","NzAvatarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/Users/kauriya/Documents/Projects/ASP.NET/WebAppShopStudy/web-shop-client/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-avatar.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nconst NZ_CONFIG_MODULE_NAME = 'avatar';\nclass NzAvatarComponent {\n    constructor(nzConfigService, elementRef, cdr, platform, ngZone) {\n        this.nzConfigService = nzConfigService;\n        this.elementRef = elementRef;\n        this.cdr = cdr;\n        this.platform = platform;\n        this.ngZone = ngZone;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzShape = 'circle';\n        this.nzSize = 'default';\n        this.nzGap = 4;\n        this.nzError = new EventEmitter();\n        this.hasText = false;\n        this.hasSrc = true;\n        this.hasIcon = false;\n        this.classMap = {};\n        this.customSize = null;\n        this.el = this.elementRef.nativeElement;\n    }\n    imgError($event) {\n        this.nzError.emit($event);\n        if (!$event.defaultPrevented) {\n            this.hasSrc = false;\n            this.hasIcon = false;\n            this.hasText = false;\n            if (this.nzIcon) {\n                this.hasIcon = true;\n            }\n            else if (this.nzText) {\n                this.hasText = true;\n            }\n            this.cdr.detectChanges();\n            this.setSizeStyle();\n            this.notifyCalc();\n        }\n    }\n    ngOnChanges() {\n        this.hasText = !this.nzSrc && !!this.nzText;\n        this.hasIcon = !this.nzSrc && !!this.nzIcon;\n        this.hasSrc = !!this.nzSrc;\n        this.setSizeStyle();\n        this.notifyCalc();\n    }\n    calcStringSize() {\n        if (!this.hasText) {\n            return;\n        }\n        const textEl = this.textEl.nativeElement;\n        const childrenWidth = textEl.offsetWidth;\n        const avatarWidth = this.el.getBoundingClientRect().width;\n        const offset = this.nzGap * 2 < avatarWidth ? this.nzGap * 2 : 8;\n        const scale = avatarWidth - offset < childrenWidth ? (avatarWidth - offset) / childrenWidth : 1;\n        textEl.style.transform = `scale(${scale}) translateX(-50%)`;\n        textEl.style.lineHeight = this.customSize || '';\n    }\n    notifyCalc() {\n        // If use ngAfterViewChecked, always demands more computations, so......\n        if (this.platform.isBrowser) {\n            this.ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.calcStringSize();\n                });\n            });\n        }\n    }\n    setSizeStyle() {\n        if (typeof this.nzSize === 'number') {\n            this.customSize = `${this.nzSize}px`;\n        }\n        else {\n            this.customSize = null;\n        }\n        this.cdr.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzAvatarComponent, deps: [{ token: i1.NzConfigService }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i2.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzAvatarComponent, selector: \"nz-avatar\", inputs: { nzShape: \"nzShape\", nzSize: \"nzSize\", nzGap: \"nzGap\", nzText: \"nzText\", nzSrc: \"nzSrc\", nzSrcSet: \"nzSrcSet\", nzAlt: \"nzAlt\", nzIcon: \"nzIcon\" }, outputs: { nzError: \"nzError\" }, host: { properties: { \"class.ant-avatar-lg\": \"nzSize === 'large'\", \"class.ant-avatar-sm\": \"nzSize === 'small'\", \"class.ant-avatar-square\": \"nzShape === 'square'\", \"class.ant-avatar-circle\": \"nzShape === 'circle'\", \"class.ant-avatar-icon\": \"nzIcon\", \"class.ant-avatar-image\": \"hasSrc \", \"style.width\": \"customSize\", \"style.height\": \"customSize\", \"style.line-height\": \"customSize\", \"style.font-size.px\": \"(hasIcon && customSize) ? $any(nzSize) / 2 : null\" }, classAttribute: \"ant-avatar\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], exportAs: [\"nzAvatar\"], usesOnChanges: true, ngImport: i0, template: `\n    <span nz-icon *ngIf=\"nzIcon && hasIcon\" [nzType]=\"nzIcon\"></span>\n    <img *ngIf=\"nzSrc && hasSrc\" [src]=\"nzSrc\" [attr.srcset]=\"nzSrcSet\" [attr.alt]=\"nzAlt\" (error)=\"imgError($event)\" />\n    <span class=\"ant-avatar-string\" #textEl *ngIf=\"nzText && hasText\">{{ nzText }}</span>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    WithConfig()\n], NzAvatarComponent.prototype, \"nzShape\", void 0);\n__decorate([\n    WithConfig()\n], NzAvatarComponent.prototype, \"nzSize\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber()\n], NzAvatarComponent.prototype, \"nzGap\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzAvatarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-avatar',\n                    exportAs: 'nzAvatar',\n                    template: `\n    <span nz-icon *ngIf=\"nzIcon && hasIcon\" [nzType]=\"nzIcon\"></span>\n    <img *ngIf=\"nzSrc && hasSrc\" [src]=\"nzSrc\" [attr.srcset]=\"nzSrcSet\" [attr.alt]=\"nzAlt\" (error)=\"imgError($event)\" />\n    <span class=\"ant-avatar-string\" #textEl *ngIf=\"nzText && hasText\">{{ nzText }}</span>\n  `,\n                    host: {\n                        class: 'ant-avatar',\n                        '[class.ant-avatar-lg]': `nzSize === 'large'`,\n                        '[class.ant-avatar-sm]': `nzSize === 'small'`,\n                        '[class.ant-avatar-square]': `nzShape === 'square'`,\n                        '[class.ant-avatar-circle]': `nzShape === 'circle'`,\n                        '[class.ant-avatar-icon]': `nzIcon`,\n                        '[class.ant-avatar-image]': `hasSrc `,\n                        '[style.width]': 'customSize',\n                        '[style.height]': 'customSize',\n                        '[style.line-height]': 'customSize',\n                        // nzSize type is number when customSize is true\n                        '[style.font-size.px]': '(hasIcon && customSize) ? $any(nzSize) / 2 : null'\n                    },\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: i1.NzConfigService }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.Platform }, { type: i0.NgZone }]; }, propDecorators: { nzShape: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzGap: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }], nzSrc: [{\n                type: Input\n            }], nzSrcSet: [{\n                type: Input\n            }], nzAlt: [{\n                type: Input\n            }], nzIcon: [{\n                type: Input\n            }], nzError: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAvatarGroupComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzAvatarGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzAvatarGroupComponent, selector: \"nz-avatar-group\", host: { classAttribute: \"ant-avatar-group\" }, exportAs: [\"nzAvatarGroup\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzAvatarGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-avatar-group',\n                    exportAs: 'nzAvatarGroup',\n                    template: ` <ng-content></ng-content> `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'ant-avatar-group'\n                    }\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAvatarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzAvatarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: NzAvatarModule, declarations: [NzAvatarComponent, NzAvatarGroupComponent], imports: [BidiModule, CommonModule, NzIconModule, PlatformModule], exports: [NzAvatarComponent, NzAvatarGroupComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzAvatarModule, imports: [BidiModule, CommonModule, NzIconModule, PlatformModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzAvatarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzAvatarComponent, NzAvatarGroupComponent],\n                    exports: [NzAvatarComponent, NzAvatarGroupComponent],\n                    imports: [BidiModule, CommonModule, NzIconModule, PlatformModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzAvatarComponent, NzAvatarGroupComponent, NzAvatarModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}